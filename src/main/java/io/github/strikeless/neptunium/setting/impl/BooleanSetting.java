package io.github.strikeless.neptunium.setting.impl;

import com.google.gson.JsonElement;
import com.google.gson.JsonPrimitive;
import io.github.strikeless.neptunium.feature.module.api.Mode;
import io.github.strikeless.neptunium.setting.Setting;
import io.github.strikeless.neptunium.setting.holder.ModeHolder;
import io.github.strikeless.neptunium.setting.holder.SettingHolder;
import lombok.Getter;

import java.util.ArrayList;
import java.util.List;

/**
 * @author Strikeless
 * @since 07.07.2022
 */
@Getter
public class BooleanSetting extends Setting<Boolean> implements ModeHolder, SettingHolder {

    // getSettings for SettingHolder generated automatically by lombok
    private final List<Setting<?>> settings = new ArrayList<>();

    // getMode for ModeHolder auto-generated by lombok
    private final Mode mode;

    public BooleanSetting(final SettingHolder parent, final String name, final Boolean value) {
        this(parent, name, value, null);
    }

    public BooleanSetting(final SettingHolder parent, final String name, final Boolean value, final Mode mode) {
        super(parent, name, value);

        if (mode != null) mode.setParentSetting(this);
        this.mode = mode;
    }

    @Override
    public void setValue(final Boolean value) {
        super.setValue(value);

        if (mode != null) {
            if (value) mode.onEnabled();
            else mode.onDisabled();
        }
    }

    @Override
    public JsonElement serialize() {
        return new JsonPrimitive(this.getValue());
    }

    @Override
    public void deserialize(final JsonElement serialized) {
        this.setValue(serialized.getAsBoolean());
    }

    @Override
    public boolean areSettingsActive() {
        return this.getParent().areSettingsActive() && this.getValue();
    }
}
